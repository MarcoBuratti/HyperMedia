
swagger: "2.0"
info:
  description: "This is a simple bookstore server"
  version: "1.0.0"
  title: "BookStore"
  contact:
    email: "10530190@polimi.it"
  license:
    name: "Apache-2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "buratticammarericanzoneri.herokuapp.com:443"
basePath: "/v2"
tags:
- name: "book"
  description: "Available book"
- name: "event"
  description: "Events sponsored"
- name: "user"
  description: "Operations about user"
- name: "author"
  description: "List of aviable authors"
- name: "cart"
  description: "Books added by an user to his cart"
schemes:
- "http"
paths:
  /books:
    get:
      tags:
      - "book"
      summary: "Books available in the inventory"
      description: "List of books available in the inventory"
      operationId: "booksGET"
      produces:
      - "application/json"
      responses:
        200:
          description: "A collection of Books"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Book"
        404:
          description: "Unexpected error"
      x-swagger-router-controller: "Book"
  /bestSeller:
    get:
      tags:
      - "book"
      summary: "Find the three best seller books"
      description: "Return a list of book"
      operationId: "getBestSeller"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Book"
        400:
          description: "Invalid Name supplied"
        404:
          description: "Book not found"
      x-swagger-router-controller: "Book"
  /bookId/{isbn}:
    get:
      tags:
      - "book"
      summary: "Find book by isbn"
      description: "Returns a book"
      operationId: "getBookById"
      produces:
      - "application/json"
      parameters:
      - name: "isbn"
        in: "path"
        description: "isbn of book to return"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Book"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Book not found"
      x-swagger-router-controller: "Book"
  /bookGenre/{bookGenre}:
    get:
      tags:
      - "book"
      summary: "Find books by Genre"
      description: "Return an array of books"
      operationId: "getBookByGenre"
      produces:
      - "application/json"
      parameters:
      - name: "bookGenre"
        in: "path"
        description: "Name of genre"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Book"
        400:
          description: "Invalid Name supplied"
        404:
          description: "Book not found"
      x-swagger-router-controller: "Book"
  /bookTheme/{bookTheme}:
    get:
      tags:
      - "book"
      summary: "Find books by theme"
      description: "Return an array of books"
      operationId: "getBookByTheme"
      produces:
      - "application/json"
      parameters:
      - name: "bookTheme"
        in: "path"
        description: "Name of theme"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Book"
        400:
          description: "Invalid Name supplied"
        404:
          description: "Book not found"
      x-swagger-router-controller: "Book"
  /allTheme:
    get:
      tags:
      - "book"
      summary: "Find all Themes"
      description: "Return a list of themes"
      operationId: "getAllTheme"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "string"
        400:
          description: "Invalid Name supplied"
        404:
          description: "Book not found"
      x-swagger-router-controller: "Book"
  /allGenre:
    get:
      tags:
      - "book"
      summary: "Find all Genres"
      description: "Return an array of genres"
      operationId: "getAllGenre"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "string"
        400:
          description: "Invalid Name supplied"
        404:
          description: "Book not found"
      x-swagger-router-controller: "Book"      
  /bookRecommended:
    get:
      tags:
      - "book"
      summary: "Find recommended books"
      description: "Return an array of books"
      operationId: "getBookRecommended"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Book"
        400:
          description: "Invalid Name supplied"
        404:
          description: "Book not found"
      x-swagger-router-controller: "Book"       
  /user/login:
    post:
      tags:
      - "user"
      summary: "Login to our database"
      description: "Login with a form built in this way:\nemail=YourEmail&password=YourPassword"
      operationId: "userLoginPOST"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "data sent to client"
        schema:
          type: "object"
          properties:
            email: 
              type: "string"
            name: 
              type: "string"
            password: 
              type: "string"
      responses:
        200:
          description: "Successful"
        404:
          description: "Unauthorized"
      x-swagger-router-controller: "User"
  /user/register:
    post:
      tags:
      - "user"
      summary: "Register to our database"
      description: "Login with a form built in this way:\nname&YourName&email=YourEmail&password=YourPassword"
      operationId: "userRegisterPOST"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "data sent to client"
        schema:
          type: "object"
          properties:
            email: 
              type: "string"
            name: 
              type: "string"
            password: 
              type: "string"
      responses:
        200:
          description: "Successful"
        404:
          description: "unauthorized"
      x-swagger-router-controller: "User"
  /findUser:
    get:
      tags:
      - "user"
      summary: "Find user"
      description: "Returns a user if it is logged"
      operationId: "getUser"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: '#/definitions/User'
        400:
          description: "Invalid ID supplied"
        404:
          description: "User not found"
      x-swagger-router-controller: "User"   
  /user/logout:
    post:
      tags:
      - "user"
      summary: "Logout to our database"
      description: "Logout"
      operationId: "userLogoutPOST"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid ID supplied"
      x-swagger-router-controller: "User"   
  /events:
    get:
      tags:
      - "event"
      summary: "Events available in the database"
      description: "List of events in the database"
      operationId: "eventsGET"
      produces:
      - "application/json"
      responses:
        200:
          description: "A collection of events"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event"
        404:
          description: "Unexpected error"
      x-swagger-router-controller: "Event"
  /eventId/{eventId}:
    get:
      tags:
      - "event"
      summary: "Find event by its id_number"
      description: "Returns an event"
      operationId: "getEventById"
      produces:
      - "application/json"
      parameters:
      - name: "eventId"
        in: "path"
        description: "ID of event to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: '#/definitions/Event'
        400:
          description: "Invalid ID supplied"
        404:
          description: "Event not found"
      x-swagger-router-controller: "Event"
  /eventByIsbn/{isbn}:
    get:
      tags:
      - "event"
      summary: "Find event by an isbn"
      description: "Returns an array of events"
      operationId: "getEventByIsbn"
      produces:
      - "application/json"
      parameters:
      - name: "isbn"
        in: "path"
        description: "isbn of a book"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: '#/definitions/Event'
        400:
          description: "Invalid ID supplied"
        404:
          description: "Event not found"
      x-swagger-router-controller: "Event"
  /eventMonth/{month}/{year}:
    get:
      tags:
      - "event"
      summary: "Find events by month"
      description: "Returns an array of events"
      operationId: "getEventByMonth"
      produces:
      - "application/json"
      parameters:
        - name: "month"
          in: "path"
          description: "Month"
          required: true
          type: "string"
        - name: "year"
          in: "path"
          description: "Year"
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: '#/definitions/Event'
        400:
          description: "Invalid Name supplied"
        404:
          description: "Event not found"
      x-swagger-router-controller: "Event"      
  /authors/{id_author}:
    get:
      tags:
      - "author"
      summary: "Find author by id_author"
      description: "Returns an author"
      operationId: "getAuthorById"
      produces:
      - "application/json"
      parameters:
      - name: "id_author"
        in: "path"
        description: "ID of author to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Author"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Author not found"
      x-swagger-router-controller: "Author"
  /allAuthors:
    get:
      tags:
      - "author"
      summary: "Find all authros"
      description: "Returns an array of authors"
      operationId: "getAllAuthors"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Author"
        400:
          description: "Invalid Name supplied"
        404:
          description: "Author not found"
      x-swagger-router-controller: "Author"      
  /booksByIdAuthor/{authorId}:
    get:
      tags:
      - "author"
      summary: "Find all books written by an author"
      description: "Returns an array of books"
      operationId: "getBooksByIdAuthor"
      produces:
      - "application/json"
      parameters:
      - name: "authorId"
        in: "path"
        description: "Id of author"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Author"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Book not found"
      x-swagger-router-controller: "Author"
  /authorsByIsbn/{isbn}:
    get:
      tags:
      - "author"
      summary: "Find all authors of a book"
      description: "Returns an array of authors"
      operationId: "getAuthorsByIsbn"
      produces:
      - "application/json"
      parameters:
      - name: "isbn"
        in: "path"
        description: "isbn of book"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Author"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Book not found"
      x-swagger-router-controller: "Author"      
  /carts:
    get:
      tags:
      - "cart"
      summary: "Find book in user's cart"
      description: "Returns a list of books"
      operationId: "getCartById"
      produces:
      - "application/json"
      responses:
        200:
          description: "A collection of books"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Cart"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Cart not found"
      x-swagger-router-controller: "Cart"
  /cartInsert:
    post:
      tags:
      - "cart"
      summary: "Insert or update user's cart"
      description: "Register into the cart a new book"
      operationId: "cartInsertPOST"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "data send to client"
        schema:
          type: "object"
          properties:
            total:
              type: "string"
            quantity:
              type: "string"
            isbn:
              type: "string"             
      responses:
        200:
          description: "Successful"
        404:
          description: "unauthorized"
      x-swagger-router-controller: "Cart"
  /cartDelete:
    delete:
      tags:
      - "cart"
      summary: "Delete all books in a user's cart"
      description: "Delete all books"
      operationId: "deleteCart"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid ID supplied"
      x-swagger-router-controller: "Cart"
  /bookDelete/{isbn}:
    delete:
      tags:
      - "cart"
      summary: "Delete a books in a user's cart"
      description: "Delete a books"
      operationId: "deleteBook"
      produces:
      - "application/json"
      parameters:
      - name: "isbn"
        in: "path"
        description: "isbn of book to delete"
        required: true
        type: "string"        
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid ID supplied"
      x-swagger-router-controller: "Cart"
definitions:
  Author:
    type: "object"
    required:
    - "id_author"
    - "name"
    - "biography"
    properties:
      id_author:
        type: "integer"
        format: "int64"
        $ref: "#/definitions/Relation"
      name:
        type: "string"
      biography:
        type: "string"
    title: "Author"
    description: "Author present in our website"
  Event:
    type: "object"
    required:
      - "id_event"
      - "name"
      - "isbn"
      - "date"
      - "description"
    properties:
      id_event:
        type: "integer"
      name:
        type: "string"
      isbn:
        type: "string"
        $ref: "#/definitions/Book"
      date:
        type: "string"
      description:
        type: "integer"
    title: "Event"
    description: "An event available in our website"
  User:
    type: "object"
    required:
      - "id_user"
      - "name"
      - "email"
    properties:
      id_user:
        type: "integer"
      name:
        type: "string"
      email:
        type: "string"
    title: "User"
    description: "User in our database"
  Cart:
    type: "object"
    required:
      - "user_id"
      - "total"
      - "quantity"
      - "isbn"
    properties:
      user_id:
        type: "string"
      total:
        type: "string"
      quantity:
        type: "string"
      isbn:
        type: "string"
    title: "Cart"
    description: "Order for books"
  Book:
    type: "object"
    required:
    - "isbn"
    - "title"
    - "theme1"
    - "theme2"
    - "genre1"
    - "genre2"
    - "date"
    - "recommended"
    - "price"
    - "status"
    - "descr"
    properties:
      isbn:
        type: "string"
        $ref: '#/definitions/Relation'
      title:
        type: "string"
      theme1:
        type: "string"
      theme2:
        type: "string"
      genre1:
        type: "string"
      genre2:
        type: "string"
      date:
        type: "string"
      recommended:
        type: "boolean"
      price:
        type: "number"  
      status:
        type: "string"
      descr:
        type: "string"
        description: "book availability in the inventory"
        enum:
        - "available"
        - "out of stock"
    title: "Book"
  Relation:
    type: "object"
    required:
      - "isbn"
      - "id_author"
    properties:
      id_author:
        type: "integer"
        format: "int64"
        $ref: "#/definitions/Author"
      isbn:
        type: "string"
        $ref: '#/definitions/Book'    
    description: "Relation between authors and books"
